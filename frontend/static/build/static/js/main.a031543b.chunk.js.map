{"version":3,"sources":["components/Form.js","components/FormDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","action","onSubmit","e","handleSubmit","htmlFor","type","value","this","chat","name","onChange","handleInput","text","Component","FormDisplay","chats","map","x","onClick","console","log","title","event","handleEdit","id","handleDelete","state","className","App","bind","fetch","then","response","json","data","setState","target","a","preventDefault","method","headers","body","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA+BeA,E,kDA5BX,WAAYC,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,aACL,OACI,uBAAMC,OAAO,GAAGC,SAAU,SAACC,GAAD,OAAO,EAAKH,MAAMI,aAAaD,IAAzD,UACI,uBAAOE,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OACLC,MAAK,UAAEC,KAAKR,MAAMS,YAAb,aAAE,EAAiBC,KACxBA,KAAK,OACLC,SAAUH,KAAKR,MAAMY,cAC5B,uBAAOP,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OACLC,MAAK,UAAEC,KAAKR,MAAMS,YAAb,aAAE,EAAiBI,KACxBH,KAAK,QACLC,SAAUH,KAAKR,MAAMY,cAC5B,uBAAOP,QAAQ,OAAf,kCACA,uBAAOC,KAAK,OACLC,MAAK,UAAEC,KAAKR,MAAMS,YAAb,aAAE,EAAiBI,KACxBH,KAAK,OACLC,SAAUH,KAAKR,MAAMY,cAC5B,wBAAQN,KAAK,SAAb,0B,GAvBGQ,aCyBJC,E,kDAxBX,WAAYf,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,SAECgB,EAAK,UAAGR,KAAKR,MAAMS,YAAd,aAAG,EAAiBQ,KAAI,SAACC,GAAD,OAC/B,qBAAeC,QAAS,kBAAMC,QAAQC,IAAI,aAA1C,UACI,4BAAIH,EAAER,OACN,6BAAKQ,EAAEI,QACP,4BAAIJ,EAAEL,OACN,wBAAQM,QAAS,SAACI,GAAD,OAAW,EAAKvB,MAAMwB,WAAWN,EAAEO,GAAIF,IAAxD,kBACA,wBAAQJ,QAAS,kBAAM,EAAKnB,MAAM0B,aAAaR,EAAEO,GAAI,EAAKE,QAA1D,sBALKT,EAAEO,OAOf,OACI,qBAAKG,UAAU,eAAf,SACI,6BACKZ,U,GAlBKF,aCgFXe,E,kDA3EX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACD2B,MAAQ,CACTlB,KAAM,IAGV,EAAKG,YAAc,EAAKA,YAAYkB,KAAjB,gBACnB,EAAK1B,aAAe,EAAKA,aAAa0B,KAAlB,gBACpB,EAAKN,WAAa,EAAKA,WAAWM,KAAhB,gBAClB,EAAKJ,aAAe,EAAKA,aAAaI,KAAlB,gBATL,E,qDAYnB,WAAqB,IAAD,OAChBC,MAAM,gBACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAC3B,KAAK,YAAK0B,U,yBAG/C,SAAYZ,GACRf,KAAK4B,SAAL,eAAgBb,EAAMc,OAAO3B,KAAOa,EAAMc,OAAO9B,U,iEAGrD,WAAmBJ,GAAnB,SAAAmC,EAAA,6DACInC,EAAEoC,iBADN,SAGUR,MAAM,gBAAiB,CACzBS,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlC,KAAMF,KAAKmB,MAAMjB,KACjBY,MAAOd,KAAKmB,MAAML,MAClBT,KAAML,KAAKmB,MAAMd,SAX7B,OAcIL,KAAK4B,SAAS,CAAC1B,KAAMF,KAAKmB,MAAMjB,KAAMY,MAAOd,KAAKmB,MAAML,MAAOT,KAAML,KAAKmB,MAAMd,OAdpF,gD,+EAiBA,SAAWY,GACPM,MAAM,gBAAkBN,EAAK,WAAY,CACrCe,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBlC,KAAMF,KAAKmB,MAAMjB,KACjBY,MAAOd,KAAKmB,MAAML,MAClBT,KAAML,KAAKmB,MAAMd,W,0BAK7B,SAAaY,GACTM,MAAM,eAAiBN,EAAK,WAAY,CACpCe,OAAQ,WAEZhC,KAAK4B,SAAS,CAAC1B,KAAMF,KAAKmB,MAAMjB,KAAMY,MAAOd,KAAKmB,MAAML,MAAOT,KAAML,KAAKmB,MAAMd,S,oBAGpF,WACI,OAAQ,mCACJ,sBAAKe,UAAU,MAAf,UACI,0CACA,cAAC,EAAD,CAAMhB,YAAaJ,KAAKI,YAClBR,aAAcI,KAAKJ,eAEzB,cAAC,EAAD,CAAaK,KAAMD,KAAKmB,MAAMlB,KACjBe,WAAYhB,KAAKgB,WACjBE,aAAclB,KAAKkB,wB,GAtE9BZ,aCMH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a031543b.chunk.js","sourcesContent":["import {Component} from \"react\";\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <form action=\"\" onSubmit={(e) => this.props.handleSubmit(e)}>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\"\n                       value={this.props.chat?.name}\n                       name=\"name\"\n                       onChange={this.props.handleInput}/>\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\"\n                       value={this.props.chat?.text}\n                       name=\"title\"\n                       onChange={this.props.handleInput}/>\n                <label htmlFor=\"text\">Share your thoughts!</label>\n                <input type=\"text\"\n                       value={this.props.chat?.text}\n                       name=\"text\"\n                       onChange={this.props.handleInput}/>\n                <button type=\"submit\">Chat!</button>\n            </form>\n        )\n    }\n}\n\nexport default Form","import {Component} from \"react\";\n\nclass FormDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const chats = this.props.chat?.map((x) => (\n            <li key={x.id} onClick={() => console.log(\"clicked!\")}>\n                <p>{x.name}</p>\n                <h1>{x.title}</h1>\n                <p>{x.text}</p>\n                <button onClick={(event) => this.props.handleEdit(x.id, event)}>Edit</button>\n                <button onClick={() => this.props.handleDelete(x.id, this.state)}>Delete</button>\n            </li>));\n        return (\n            <div className=\"chat-display\">\n                <ul>\n                    {chats}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default FormDisplay","import './App.css';\nimport {Component} from \"react\";\nimport Form from \"./components/Form\";\nimport FormDisplay from \"./components/FormDisplay\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chat: []\n        }\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"/api/v1/chat\")\n            .then(response => response.json())\n            .then(data => this.setState({chat: [...data]}));\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n\n        await fetch(\"/api/v1/chat/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/JSON\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                title: this.state.title,\n                text: this.state.text\n            })\n        });\n        this.setState({name: this.state.name, title: this.state.title, text: this.state.text})\n    }\n\n    handleEdit(id) {\n        fetch(\"/api/v1/chat/\" + id + \"/update/\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"Application/Json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                title: this.state.title,\n                text: this.state.text\n            })\n        })\n    }\n\n    handleDelete(id) {\n        fetch(\"api/v1/chat/\" + id + \"/delete/\", {\n            method: \"DELETE\"\n        })\n        this.setState({name: this.state.name, title: this.state.title, text: this.state.text})\n    }\n\n    render() {\n        return (<>\n            <div className=\"App\">\n                <h1>Chat App</h1>\n                <Form handleInput={this.handleInput}\n                      handleSubmit={this.handleSubmit}/>\n\n                <FormDisplay chat={this.state.chat}\n                             handleEdit={this.handleEdit}\n                             handleDelete={this.handleDelete}/>\n            </div>\n        </>);\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}