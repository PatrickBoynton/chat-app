{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","chat","handleInput","bind","fetch","then","response","json","data","setState","event","this","target","name","value","e","a","preventDefault","method","headers","body","JSON","stringify","title","text","id","chats","map","x","onClick","handleEdit","handleDelete","className","action","onSubmit","handleSubmit","htmlFor","type","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAuGeA,E,kDAlGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAGV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBANJ,E,qDASnB,WAAqB,IAAD,OAChBC,MAAM,gBACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACR,KAAK,YAAKO,U,yBAG/C,SAAYE,GACRC,KAAKF,SAAL,eAAgBC,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,iEAGpD,WAAmBC,GAAnB,SAAAC,EAAA,6DACGD,EAAEE,iBADL,SAGSb,MAAM,gBAAiB,CACzBc,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,KAAMF,KAAKX,MAAMa,KACjBU,MAAOZ,KAAKX,MAAMuB,MAClBC,KAAMb,KAAKX,MAAMwB,SAX5B,gD,+EAgBD,SAAWT,EAAGU,GACVrB,MAAM,WAAaqB,EAAI,CACnBP,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,KAAM,UACNU,MAAO,kBACPC,KAAM,wB,0BAKlB,SAAaC,EAAIzB,GACbI,MAAM,eAAiBqB,EAAK,WAAY,CACpCP,OAAQ,a,oBAKhB,WAAU,IAAD,OACCQ,EAAQf,KAAKX,MAAMC,KAAK0B,KAAI,SAACC,GAAD,OAClB,+BACI,4BAAIA,EAAEf,OACN,6BAAKe,EAAEL,QACP,4BAAIK,EAAEJ,OACN,wBAAQK,QAAS,EAAKC,WAAtB,kBACA,wBAAQD,QAAS,kBAAM,EAAKE,aAAaH,EAAEH,GAAI,EAAKzB,QAApD,sBALK4B,EAAEH,OAO3B,OAAQ,mCACJ,sBAAKO,UAAU,MAAf,UACI,0CACA,uBAAMC,OAAO,GAAGC,SAAU,SAACnB,GAAD,OAAO,EAAKoB,aAAapB,IAAnD,UACI,uBAAOqB,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OACLvB,MAAOH,KAAKX,MAAMC,KAAKY,KACvBA,KAAK,OACLY,GAAG,OACHa,SAAU3B,KAAKT,cACtB,uBAAOkC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OACLvB,MAAOH,KAAKX,MAAMC,KAAKuB,KACvBX,KAAK,QACLyB,SAAU3B,KAAKT,cACtB,uBAAOkC,QAAQ,OAAf,kCACA,uBAAOC,KAAK,OACLvB,MAAOH,KAAKX,MAAMC,KAAKuB,KACvBX,KAAK,OACLyB,SAAU3B,KAAKT,cACtB,wBAAQmC,KAAK,SAAb,sBAGJ,qBAAKL,UAAU,eAAf,SACI,6BACKN,e,GA3FPa,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.486ca5d2.chunk.js","sourcesContent":["import './App.css';\nimport {Component} from \"react\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chat: []\n        }\n\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"/api/v1/chat\")\n            .then(response => response.json())\n            .then(data => this.setState({chat: [...data]}));\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n     async handleSubmit(e) {\n        e.preventDefault();\n\n        await fetch(\"/api/v1/chat/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/JSON\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                title: this.state.title,\n                text: this.state.text\n            })\n        });\n    }\n\n    handleEdit(e, id) {\n        fetch(\"/api/v1/\" + id, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"Application/Json\"\n            },\n            body: JSON.stringify({\n                name: \"Patrick\",\n                title: \"My super title!\",\n                text: \"My fun episode!\"\n            })\n        })\n    }\n\n    handleDelete(id, state) {\n        fetch(\"api/v1/chat/\" + id + \"/delete/\", {\n            method: \"DELETE\"\n        })\n        // this.setState({chat: []})\n    }\n\n    render() {\n        const chats = this.state.chat.map((x) => (\n                        <li key={x.id}>\n                            <p>{x.name}</p>\n                            <h1>{x.title}</h1>\n                            <p>{x.text}</p>\n                            <button onClick={this.handleEdit}>Edit</button>\n                            <button onClick={() => this.handleDelete(x.id, this.state)}>Delete</button>\n                        </li>));\n        return (<>\n            <div className=\"App\">\n                <h1>Chat App</h1>\n                <form action=\"\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\"\n                           value={this.state.chat.name}\n                           name=\"name\"\n                           id=\"name\"\n                           onChange={this.handleInput}/>\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\"\n                           value={this.state.chat.text}\n                           name=\"title\"\n                           onChange={this.handleInput}/>\n                    <label htmlFor=\"text\">Share your thoughts!</label>\n                    <input type=\"text\"\n                           value={this.state.chat.text}\n                           name=\"text\"\n                           onChange={this.handleInput}/>\n                    <button type=\"submit\">Chat!</button>\n                </form>\n\n                <div className=\"chat-display\">\n                    <ul>\n                        {chats}\n                    </ul>\n                </div>\n            </div>\n        </>);\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}