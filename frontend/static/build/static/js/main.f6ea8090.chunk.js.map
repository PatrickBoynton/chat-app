{"version":3,"sources":["components/Login.js","components/Register.js","components/Form.js","components/FormDisplay.js","components/Room.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","username","email","password","fetch","action","onSubmit","e","handleLogin","htmlFor","type","name","value","this","onChange","handleInput","href","Component","Register","password1","password2","handleRegistration","Form","handlePost","chat","text","FormDisplay","chats","map","x","onClick","console","log","id","title","event","handleEdit","handleDelete","className","Room","user","App","isLoggedIn","Cookies","get","bind","then","response","json","data","setState","target","object","a","preventDefault","method","headers","body","JSON","stringify","options","catch","error","key","set","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6ea8090.chunk.js","sourcesContent":["import {Component} from \"react\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"/\")\n    }\n\n    render() {\n        return (<>\n            <h2>Login</h2>\n            <form action=\"\" onSubmit={(e) => this.props.handleLogin(e, this.props)}>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       name=\"username\"\n                       value={this.props.username}\n                       onChange={this.props.handleInput}/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       name=\"email\"\n                       value={this.props.email}\n                       onChange={this.props.handleInput}/>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\"\n                       name=\"password\"\n                       value={this.props.password}\n                       onChange={this.props.handleInput}/>\n                <button type=\"submit\">Login</button>\n                <p>Don't have an account? Why not <a href=\"/\">Register</a>first?</p>\n            </form>\n        </>)\n    }\n}\n\nexport default Login","import {Component} from \"react\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password1: \"\",\n            password2: \"\"\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Register</h2>\n                <form action=\"\" onSubmit={(e) =>\n                    this.props.handleRegistration(e, this.props)}>\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\"\n                           name=\"username\"\n                           value={this.props.username}\n                           onChange={this.props.handleInput}/>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\"\n                           name=\"email\"\n                           value={this.props.email}\n                           onChange={this.props.handleInput}/>\n                    <label htmlFor=\"password1\">Password</label>\n                    <input type=\"password\"\n                           name=\"password1\"\n                           value={this.props.password1}\n                           onChange={this.props.handleInput}/>\n                    <label htmlFor=\"password2\">Confirm Password</label>\n                    <input type=\"password\"\n                           name=\"password2\"\n                           value={this.props.password2}\n                           onChange={this.props.handleInput}/>\n                    <button type=\"submit\">Register</button>\n                    <p>Already have an account? Why not <a href=\"/\">Login</a>?</p>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default Register","function Form(props) {\n    return (\n        <form action=\"\" onSubmit={(e) => props.handlePost(e)}>\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\"\n                   value={props.chat?.name}\n                   name=\"name\"\n                   onChange={props.handleInput}/>\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\"\n                   value={props.chat?.text}\n                   name=\"title\"\n                   onChange={props.handleInput}/>\n            <label htmlFor=\"text\">Share your thoughts!</label>\n            <input type=\"text\"\n                   value={props.chat?.text}\n                   name=\"text\"\n                   onChange={props.handleInput}/>\n            <button type=\"submit\">Chat!</button>\n        </form>\n    )\n}\n\nexport default Form","import {Component} from \"react\";\n\nclass FormDisplay extends Component {\n\n    render() {\n        const chats = this.props.chat?.map((x) => (\n            <li key={x.id} onClick={() => console.log(x.id)}>\n                <p>{x.name}</p>\n                <h1>{x.title}</h1>\n                <p>{x.text}</p>\n                <button onClick={(event) => this.props.handleEdit(x.id, event)}>Edit</button>\n                <button onClick={() => this.props.handleDelete(x.id, this.state)}>Delete</button>\n            </li>));\n        return (\n            <div className=\"chat-display\">\n                <ul>\n                    {chats}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default FormDisplay","import Login from \"./Login\";\nimport Register from \"./Register\";\nimport Form from \"./Form\";\nimport FormDisplay from \"./FormDisplay\";\nimport {Component} from \"react\";\n\nclass Room extends Component {\n    render() {\n\n        return (\n            <>\n                <Form handleInput={this.props.handleInput}\n                      handlePost={this.props.handlePost}/>\n\n                <FormDisplay chat={this.props.chat}\n                             handleEdit={this.props.handleEdit}\n                             handleDelete={this.props.handleDelete}/>\n                <Login user={this.props.user}\n                       handleLogin={this.props.handleLogin}\n                       handleInput={this.props.handleInput}/>\n                {/*Remember to change it to props when passing it down not state.*/}\n                <Register user={this.props.user}\n                          handleRegistration={this.props.handleRegistration}\n                          handleInput={this.props.handleInput}/>\n            </>\n        )\n    }\n}\n\nexport default Room","import './App.css';\nimport {Component} from \"react\";\nimport Room from \"./components/Room\";\nimport Cookies from 'js-cookie';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chat: [],\n            isLoggedIn: !!Cookies.get(\"Authorization\"),\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            password1: \"\",\n            password2: \"\"\n        }\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handlePost = this.handlePost.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleRegistration = this.handleRegistration.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"/api/v1/chat\")\n            .then(response => response.json())\n            .then(data => this.setState({chat: [...data]}));\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    async handlePost(e, object) {\n        e.preventDefault();\n\n        await fetch(\"/api/v1/chat/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/JSON\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                title: this.state.title,\n                text: this.state.text\n            })\n        });\n        this.setState({name: this.state.name, title: this.state.title, text: this.state.text})\n    }\n\n    handleEdit(id) {\n        fetch(\"/api/v1/chat/\" + id + \"/update/\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"Application/Json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                title: this.state.title,\n                text: this.state.text\n            })\n        })\n    }\n\n    handleDelete(id) {\n        fetch(\"api/v1/chat/\" + id + \"/delete/\", {\n            method: \"DELETE\"\n        })\n        this.setState({name: this.state.name, title: this.state.title, text: this.state.text})\n    }\n\n    async handleRegistration(e, object) {\n        e.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({\n                username: object.user.username,\n                email: object.user.email,\n                password1: object.user.password1,\n                password2: object.user.password2\n            }),\n        }\n\n        const response = await fetch(\"/rest-auth/registration/\", options);\n        const data = await response.json().catch((error) => console.log(error));\n        if (data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`);\n        }\n    }\n\n    handleLogin(e, object) {\n\n        console.log(object.user);\n        e.preventDefault();\n    }\n\n    render() {\n        return (<>\n            <div className=\"App\">\n                <h1>Chat App</h1>\n                <Room user={this.state}\n                      chat={this.state.chat}\n                      handlePost={this.handlePost}\n                      handleEdit={this.handleEdit}\n                      handleDelete={this.handleDelete}\n                      handleRegistration={this.handleRegistration}\n                      handleLogin={this.handleLogin}\n                      handleInput={this.handleInput}/>\n            </div>\n        </>);\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}