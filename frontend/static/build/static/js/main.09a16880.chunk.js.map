{"version":3,"sources":["components/user/Login.js","components/user/Register.js","components/Header.js","components/chat_app/Chat.js","components/chat_app/ChatDisplay.js","components/chat_app/Room.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","username","email","password","handleInput","bind","handleLogin","this","isLoggedIn","options","headers","Cookies","get","console","log","fetch","then","response","json","data","setState","chat","event","target","name","value","e","object","a","preventDefault","method","body","JSON","stringify","catch","error","key","set","alert","className","onSubmit","htmlFor","type","onChange","onClick","loginOrRegister","href","Component","Register","password1","password2","handleRegistration","action","Header","rooms","detail","map","room","handleRoomSwitch","title","id","Chat","user","text","current_room","handlePost","ChatDisplay","handleDelete","chats","handleEdit","style","Room","handleLoginOrRegister","previousState","remove","isEditMode","handleEditMode","handleLogout","App","length","owner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a16880.chunk.js","sourcesContent":["import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: ''\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.isLoggedIn) {\n            const options = {\n                headers: {\n                    'Content-Type': 'Application/Json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    'Authorization': Cookies.get('Authorization')\n                }\n            };\n            console.log(options);\n            fetch('/api/v1/chat', options)\n                .then(response => response.json())\n                .then(data => this.setState({chat: [...data]}));\n            console.log('Logged in.');\n        } else {\n            console.log('Logged out.');\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async handleLogin(e, object) {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({\n                username: object.username,\n                email: object.email,\n                password: object.password\n            }),\n        };\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(data);\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.setState({isLoggedIn: !!Cookies.get('Authorization')});\n        } else {\n            alert('Did not log in.');\n        }\n    }\n\n    render() {\n        return (<>\n            <h2>Login</h2>\n            <form className=\"d-flex flex-column\" onSubmit={(e) => this.handleLogin(e, this.state)}>\n                <div className=\"input-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\"\n                           name=\"username\"\n                           value={this.state.username}\n                           onChange={this.handleInput}/>\n                </div>\n                <div className=\"input-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\"\n                           name=\"email\"\n                           value={this.state.email}\n                           onChange={this.handleInput}/>\n                </div>\n                <div className=\"input-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\"\n                           name=\"password\"\n                           value={this.state.password}\n                           onChange={this.handleInput}/>\n                </div>\n                <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n            </form>\n            <p>Don't have an account? Why not <a onClick={() => this.props.loginOrRegister()} href=\"#\">Register</a>first?\n            </p>\n        </>);\n    }\n}\n\nexport default Login;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: ''\n        };\n\n        this.handleRegistration = this.handleRegistration.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleRegistration(e, object) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                \n            },\n            body: JSON.stringify({\n                username: object.username,\n                email: object.email,\n                password1: object.password1,\n                password2: object.password2\n            }),\n        };\n\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json();\n\n        console.log(\"Registration data: \" + data);\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n        }\n        this.setState({isLoggedIn: !!Cookies.get('Authorization')});\n        e.preventDefault();\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Register</h2>\n                <form action=\"\" onSubmit={(e) =>\n                    this.handleRegistration(e, this.state)}>\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\"\n                           name=\"username\"\n                           value={this.state.username}\n                           onChange={this.handleInput}/>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\"\n                           name=\"email\"\n                           value={this.state.email}\n                           onChange={this.handleInput}/>\n                    <label htmlFor=\"password1\">Password</label>\n                    <input type=\"password\"\n                           name=\"password1\"\n                           value={this.state.password1}\n                           onChange={this.handleInput}/>\n                    <label htmlFor=\"password2\">Confirm Password</label>\n                    <input type=\"password\"\n                           name=\"password2\"\n                           value={this.props.password2}\n                           onChange={this.props.handleInput}/>\n                    <button className=\"btn btn-success\" type=\"submit\">Register</button>\n                    <p>Already have an account? Why not <a onClick={() => this.props.loginOrRegister()}\n                                                           href=\"#\">Login</a>?</p>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Register;","import {Component} from 'react';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rooms: [],\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/chat/rooms');\n        const data = await response.json();\n        if (!data.detail) {\n            this.setState({rooms: data});\n        }\n    }\n\n    render() {\n        const rooms = this.state.rooms?.map(room => <section key={room.id}>\n            <button className=\"btn btn-info mb-3\" onClick={() => this.props.handleRoomSwitch(room)}>{room.title}</button>\n\n        </section>);\n        return <>\n            {rooms}\n        </>;\n    }\n}\n\nexport default Header;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport Header from '../Header';\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            name: '',\n            text: '',\n            room: 2,\n            current_room: 2\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handlePost = this.handlePost.bind(this);\n    }\n\n    async componentDidMount() {\n    }\n\n    async handlePost(e, object) {\n        e.preventDefault();\n        this.setState({\n            name: this.props.user,\n            title: this.state.title,\n            text: this.state.text,\n            room: this.props.current_room\n        });\n        console.log('From Post: ' + object);\n        await fetch('/api/v1/chat/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': Cookies.get('Authorization')\n            },\n            body: JSON.stringify({\n                name: this.props.user,\n                title: this.state.title,\n                text: this.state.text,\n                room: this.state.current_room\n            })\n        });\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return (\n            <>\n                <form action=\"\" onSubmit={(e) => this.handlePost(e)}>\n                    <p>{this.props.user}</p>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"text\">Share your thoughts!</label>\n                        <input type=\"text\"\n                               value={this.state.chat?.text}\n                               name=\"text\"\n                               onChange={this.handleInput}/>\n                    </div>\n                    <button className=\"btn btn-success\" type=\"submit\">Chat!</button>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Chat;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass ChatDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(chat) {\n        fetch('api/v1/chat/' + chat.id + '/delete/', {\n            method: 'DELETE',\n            headers: {\n                'Application-Type': 'Application/Json',\n                'Authorization': Cookies.get('Authorization')\n            }\n\n        });\n        this.setState({name: chat.name, title: chat.title, text: chat.text});\n    }\n\n    render() {\n        const chats = this.props.chat?.map((chat) => (\n            <section key={chat.id} onClick={() => {\n                if (chat.name === this.props.user) {\n                    console.log(chat);\n                }\n            }}>\n                {\n                    chat.room === this.props.current_room\n                        ?\n                        <div className=\"card\">\n                            <p>{chat.name}</p>\n                            <div className=\"card-body\">\n                                <p>{chat.text}</p>\n                                <button className=\"btn btn-primary\"\n                                        onClick={(event) => this.props.handleEdit(chat, event)}>Edit\n                                </button>\n                                <button style={{\"margin-left\": '5px'}}\n                                        className=\"btn btn-danger\"\n                                        onClick={() => this.handleDelete(chat.id, this.state)}>Delete\n                                </button>\n                            </div>\n                        </div>\n                        :\n                        null\n                }\n\n            </section>));\n        return (\n            <>\n                <div className=\"chat-display\">\n                    {chats}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default ChatDisplay;","import Login from '../user/Login';\nimport Register from '../user/Register';\nimport Chat from './Chat';\nimport ChatDisplay from './ChatDisplay';\nimport {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Room extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginOrRegister: true,\n            rooms: [],\n        };\n        this.handleLoginOrRegister = this.handleLoginOrRegister.bind(this);\n    }\n\n    handleLoginOrRegister() {\n        this.setState((previousState) => ({\n            loginOrRegister: !previousState.loginOrRegister\n        }));\n    }\n\n    async handleLogout(e) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/JSON',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n        };\n\n        const response = await fetch('/rest-auth/logout/', options);\n        const data = await response.json().catch(error => console.log(error));\n        Cookies.remove('Authorization');\n        this.setState({isLoggedIn: !!Cookies.get('Authorization')});\n        console.log(data);\n    }\n\n    render() {\n\n        return (\n            <>\n                {\n                    !this.props.isLoggedIn\n                        ?\n                        <>\n                            {\n                                this.state.loginOrRegister\n                                    ?\n                                    <Login user={this.props.user}\n                                           loginOrRegister={this.handleLoginOrRegister}\n                                           handleLogin={this.props.handleLogin}\n                                           isLoggedIn={this.props.isLoggedIn}\n                                           handleInput={this.props.handleInput}/>\n                                    :\n                                    //Remember to change it to props when passing it down not state.\n                                    <Register user={this.props.user}\n                                              loginOrRegister={this.handleLoginOrRegister}\n                                              isLoggedIn={this.props.isLoggedIn}\n                                              handleRegistration={this.props.handleRegistration}\n                                              handleInput={this.props.handleInput}/>\n                            }\n                        </>\n                        :\n                        <>\n                            <Chat current_room={this.props.current_room}\n                                  room={this.props.room}\n                                  user={this.props.user}\n                                  isEditMode={this.props.isEditMode}\n                                  handleInput={this.props.handleInput}\n                                  handlePost={this.props.handlePost}/>\n\n                            <ChatDisplay current_room={this.props.current_room}\n                                         room={this.state.rooms}\n                                         user={this.props.user}\n                                         chat={this.props.chat}\n                                         isEditMode={this.props.isEditMode}\n                                         handleEditMode={this.props.handleEditMode}\n                                         handleEdit={this.props.handleEdit}\n                                         handleDelete={this.props.handleDelete}/>\n                            <button className=\"btn btn-danger\" onClick={() => this.handleLogout(this.props.user)}>Logout</button>\n                        </>\n\n                }\n            </>\n        );\n    }\n\n}\n\nexport default Room;","import './App.css';\nimport {Component} from 'react';\nimport Room from './components/chat_app/Room';\nimport Header from './components/Header';\nimport Cookies from 'js-cookie';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chat: [],\n            isLoggedIn: !!Cookies.get('Authorization'),\n            isEditMode: false,\n            password: '',\n            id: 0,\n            user: '',\n            room: 2,\n            current_room: 2\n        };\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleRoomSwitch = this.handleRoomSwitch.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/rest-auth/user/');\n        const data = await response.json();\n        this.setState({user: data.username});\n        console.log(this.state.user);\n        if (this.state.isLoggedIn) {\n            const options = {\n                headers: {\n                    'Content-Type': 'Application/Json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    'Authorization': Cookies.get('Authorization')\n                }\n            };\n            fetch('/api/v1/chat', options)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.length > 0)\n                        this.setState({chat: [...data]});\n                });\n            console.log('Logged in.');\n        } else {\n            console.log('Logged out.');\n        }\n    }\n\n    handleEditMode() {\n        this.setState((previousState) => ({isEditMode: !previousState}));\n    }\n\n    handleRoomSwitch(room) {\n        this.setState({current_room: room.id})\n    }\n\n    handleEdit(chat) {\n        this.props.handleEditMode();\n        fetch('/api/v1/chat/' + chat.id + '/update/', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'Authorization': Cookies.get('Authorization'),\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                id: chat.id,\n                name: chat.name,\n                text: chat.text,\n                owner: chat.owner,\n                room: chat.room\n            })\n        });\n\n        this.setState({name: chat.name, text: chat.text});\n    }\n\n    render() {\n        return (<>\n            <div className=\"App\">\n                <h1>Chat App</h1>\n                <Header handleRoomSwitch={this.handleRoomSwitch}/>\n                <Room current_room={this.state.current_room}\n                      user={this.state.user}\n                      chat={this.state.chat}\n                      isEditMode={this.state.isEditMode}\n                      handleEdit={this.handleEdit}\n                      handleEditMode={this.handleEditMode}\n                      isLoggedIn={this.state.isLoggedIn}\n                      handleLogout={this.handleLogout}/>\n            </div>\n        </>);\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}